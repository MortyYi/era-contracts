/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockExecutorFacet } from "./MockExecutorFacet";

export class MockExecutorFacetFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MockExecutorFacet> {
    return super.deploy(overrides || {}) as Promise<MockExecutorFacet>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockExecutorFacet {
    return super.attach(address) as MockExecutorFacet;
  }
  connect(signer: Signer): MockExecutorFacetFactory {
    return super.connect(signer) as MockExecutorFacetFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockExecutorFacet {
    return new Contract(address, _abi, signerOrProvider) as MockExecutorFacet;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_batchNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_l2LogsTreeRoot",
        type: "bytes32",
      },
    ],
    name: "saveL2LogsRootHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060a88061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638a75bb0914602d575b600080fd5b604f60383660046051565b600b8290556000918252600f602052604090912055565b005b60008060408385031215606357600080fd5b5050803592602090910135915056fea2646970667358221220af6904d483c0257f890d5cdc735763591d6d66ea3119913a12aef4de0a965e4b64736f6c63430008140033";
