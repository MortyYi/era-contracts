/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SingletonFactory } from "./SingletonFactory";

export class SingletonFactoryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SingletonFactory> {
    return super.deploy(overrides || {}) as Promise<SingletonFactory>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SingletonFactory {
    return super.attach(address) as SingletonFactory;
  }
  connect(signer: Signer): SingletonFactoryFactory {
    return super.connect(signer) as SingletonFactoryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SingletonFactory {
    return new Contract(address, _abi, signerOrProvider) as SingletonFactory;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_initCode",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address payable",
        name: "createdContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101b7806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634af63f0214610030575b600080fd5b61004361003e3660046100ae565b61006c565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000818351602085016000f59392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156100c157600080fd5b823567ffffffffffffffff808211156100d957600080fd5b818501915085601f8301126100ed57600080fd5b8135818111156100ff576100ff61007f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156101455761014561007f565b8160405282815288602084870101111561015e57600080fd5b82602086016020830137600060209382018401529896909101359650505050505056fea2646970667358221220d74bb11fdfb7fa95e9ed8b606f3d5600cda08c8212de4605e02029ad2c8430a464736f6c63430008140033";
