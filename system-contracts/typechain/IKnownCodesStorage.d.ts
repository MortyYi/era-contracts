/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IKnownCodesStorageInterface extends ethers.utils.Interface {
  functions: {
    "getMarker(bytes32)": FunctionFragment;
    "markBytecodeAsPublished(bytes32)": FunctionFragment;
    "markFactoryDeps(bool,bytes32[])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getMarker",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "markBytecodeAsPublished",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "markFactoryDeps",
    values: [boolean, BytesLike[]]
  ): string;

  decodeFunctionResult(functionFragment: "getMarker", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "markBytecodeAsPublished",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "markFactoryDeps",
    data: BytesLike
  ): Result;

  events: {
    "MarkedAsKnown(bytes32,bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "MarkedAsKnown"): EventFragment;
}

export class IKnownCodesStorage extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IKnownCodesStorageInterface;

  functions: {
    getMarker(
      _hash: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getMarker(bytes32)"(
      _hash: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    markBytecodeAsPublished(
      _bytecodeHash: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "markBytecodeAsPublished(bytes32)"(
      _bytecodeHash: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    markFactoryDeps(
      _shouldSendToL1: boolean,
      _hashes: BytesLike[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "markFactoryDeps(bool,bytes32[])"(
      _shouldSendToL1: boolean,
      _hashes: BytesLike[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  getMarker(_hash: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

  "getMarker(bytes32)"(
    _hash: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  markBytecodeAsPublished(
    _bytecodeHash: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "markBytecodeAsPublished(bytes32)"(
    _bytecodeHash: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  markFactoryDeps(
    _shouldSendToL1: boolean,
    _hashes: BytesLike[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "markFactoryDeps(bool,bytes32[])"(
    _shouldSendToL1: boolean,
    _hashes: BytesLike[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    getMarker(_hash: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getMarker(bytes32)"(
      _hash: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    markBytecodeAsPublished(
      _bytecodeHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "markBytecodeAsPublished(bytes32)"(
      _bytecodeHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    markFactoryDeps(
      _shouldSendToL1: boolean,
      _hashes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<void>;

    "markFactoryDeps(bool,bytes32[])"(
      _shouldSendToL1: boolean,
      _hashes: BytesLike[],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    MarkedAsKnown(
      bytecodeHash: BytesLike | null,
      sendBytecodeToL1: boolean | null
    ): EventFilter;
  };

  estimateGas: {
    getMarker(_hash: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getMarker(bytes32)"(
      _hash: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    markBytecodeAsPublished(
      _bytecodeHash: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "markBytecodeAsPublished(bytes32)"(
      _bytecodeHash: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    markFactoryDeps(
      _shouldSendToL1: boolean,
      _hashes: BytesLike[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "markFactoryDeps(bool,bytes32[])"(
      _shouldSendToL1: boolean,
      _hashes: BytesLike[],
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getMarker(
      _hash: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMarker(bytes32)"(
      _hash: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    markBytecodeAsPublished(
      _bytecodeHash: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "markBytecodeAsPublished(bytes32)"(
      _bytecodeHash: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    markFactoryDeps(
      _shouldSendToL1: boolean,
      _hashes: BytesLike[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "markFactoryDeps(bool,bytes32[])"(
      _shouldSendToL1: boolean,
      _hashes: BytesLike[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
