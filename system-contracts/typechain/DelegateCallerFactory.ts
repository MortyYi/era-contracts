/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DelegateCaller } from "./DelegateCaller";

export class DelegateCallerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<DelegateCaller> {
    return super.deploy(overrides || {}) as Promise<DelegateCaller>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DelegateCaller {
    return super.attach(address) as DelegateCaller;
  }
  connect(signer: Signer): DelegateCallerFactory {
    return super.connect(signer) as DelegateCallerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DelegateCaller {
    return new Contract(address, _abi, signerOrProvider) as DelegateCaller;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "delegateCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x00010000000000020000008003000039000000400030043f00000000030100190000006003300270000000240330019700000001022001900000004d0000c13d000000040230008c000000550000413d000000000201043b0000002602200197000000270220009c000000550000c13d000000040230008a000000200220008c000000550000413d0000000402100370000000000202043b000000280420009c000000550000213d0000001f0530018f0000000504300272000000200000613d00000000060000190000000507600210000000000871034f000000000808043b00000000008704350000000106600039000000000746004b000000190000413d000000000605004b0000002e0000613d00000003055002100000000504400210000000000604043300000000065601cf000000000656022f000000000741034f000000000707043b0000010005500089000000000757022f00000000055701cf000000000565019f00000000005404350000000004000414000000040520008c000000570000c13d000000000131034f00000000030000310000001f0430018f00000005023002720000003e0000613d00000000050000190000000506500210000000000761034f000000000707043b00000000007604350000000105500039000000000625004b000000370000413d000000000504004b0000007d0000613d00000003044002100000000502200210000000000502043300000000054501cf000000000545022f000000000121034f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f00000000001204350000007d0000013d0000000001000416000000000101004b000000550000c13d00000020010000390000010000100443000001200000044300000025010000410000008a0001042e00000000010000190000008b000104300000002401000041000000240540009c0000000004018019000000c0014002100000006003300210000000000131019f008900840000040f000000000301001900000060033002700000001f0430018f000000240030019d000000240330019700000005053002720000006d0000613d00000000060000190000000507600210000000000871034f000000000808043b00000000008704350000000106600039000000000756004b000000660000413d000000000604004b0000007b0000613d00000003044002100000000505500210000000000605043300000000064601cf000000000646022f000000000151034f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f00000000001504350000000101200190000000820000613d0000002401000041000000240230009c000000000301801900000060013002100000008a0001042e00000060013002100000008b0001043000000087002104250000000102000039000000000001042d0000000002000019000000000001042d00000089000004320000008a0001042e0000008b00010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000a635f01d00000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000c5fc095b89cde4cca8692bcde021a8a21b654b7e9f957172773f8d82b09decf2";
